{"version":3,"sources":["Board.js","Welcome.js","GameMenu.js","App.js","serviceWorker.js","index.js"],"names":["Board","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","handlePlayAgain","inherits","createClass","key","value","index","checkWinner","e","playAgainFunc","preventDefault","showBoard","_this2","allSquare","square","map","sq","react_default","a","createElement","className","onClick","nameShow1","name1","nameShow2","name2","playAgain","type","startGame","Component","Welcome","handleSubmit","onSubmit","forPlayer1","forPlayer2","required","name","playerChoose","between1Player","between2Player","GameMenu","handleMode","handleQuit","changePlayerChoose","quit","menu","player1","App","state","Array","fill","winner","showMenu","currentPlayer","submit","changeMode","setState","target","name11","name22","trim","length","alert","newSquare","newPlayer","i","winLines","len","_winLines$i","slicedToArray","x","y","z","style","textAlign","opacity","textDecoration","Welcome_Welcome","Board_Board","GameMenu_GameMenu","rel","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a3b5b9f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport class Board extends Component {\n    constructor(props) {\n    super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handlePlayAgain = this.handlePlayAgain.bind(this);\n    }\n\nhandleClick(index) {\n      this.props.checkWinner(index);\n}\nhandlePlayAgain(e) {\n    this.props.playAgainFunc(e);\n    e.preventDefault()\n}\n\nrender() {\n    const allSquare = this.props.square.map((sq,index) => { \n    return (\n    <div \n    key={index} \n    className=\"square\" \n    onClick = {e=> {this.handleClick(index)}}>\n    {sq}    \n    </div>\n    );\n    }\n);\n    const sign1 = 'X',sign2 = 'O';\n    const nameShow1 = (\n        <p><b>{this.props.name1} : </b> {sign1}</p>\n    );\n    const nameShow2 = (\n        <p><b>{this.props.name2} : </b> {sign2}</p>\n    );\n    var showBoard;\n    if(this.props.playAgain ) {\n       showBoard = (\n                 <div className = \"welcomeWrapper\"> \n                <button type=\"button\" value=\"Play Again\" onClick={this.handlePlayAgain}>Play Again</button>\n                </div>\n        );\n    }\n    else {\n      showBoard = ( \n          <div>\n            <div className = \"nameShow\">\n                {this.props.startGame?nameShow1:''}\n                {this.props.startGame?nameShow2:''}\n\n            </div>     \n\n             <div className = 'board'>    \n                {   \n                    this.props.startGame?allSquare:''\n                }\n             </div>\n    </div>\n        );\n    }\n\n    return ( \n             <div className = \"boardContainer\">\n                 {\n                     showBoard\n                 }\n             </div>    \n          );\n}\n}","import React,{Component} from 'react';\n\nexport class Welcome extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handlePlayAgain = this.handlePlayAgain.bind(this);\n\n    }\nhandleSubmit(e) {\n\n    this.props.onSubmit(e);\n    e.preventDefault()\n}\nhandleClick(e) {\n    this.props.onClick(e);\n}\nhandlePlayAgain(e) {\n    this.props.playAgain(e);\n    \n}\n    render() {\n\n    const forPlayer1 = (\n              <div>\n                <h1>COMMING soon!</h1>       \n            </div>\n            );\n    const forPlayer2 = (\n                    <div>\n                    <form  onSubmit={this.handleSubmit} >\n                    <label className=\"nameInputs\">Player1 <input required name='name1' type = 'text' />\n                    </label> <br /> <br/>\n                    <label className=\"nameInputs\">Player2 <input required name='name2' type = 'text' />\n                    </label><br/> <br/> <br/>\n                    <input type=\"submit\" className='submit' value = 'START'/>\n                    </form>\n                    </div>\n        );\n\n        var playerChoose = (\n           <div>\n           <button type=\"button\" value=\"1player\" onClick={this.props.onClick}>1 Player</button>\n            <br/> <br/>\n            <button type=\"button\" value = '2player' onClick={this.props.onClick}>2 Player</button>\n        </div>\n        );\n            \n        return (\n            <div className = 'welcomeWrapper'>\n              {\n                  !this.props.playerChoose?playerChoose:''\n              }\n\n                {\n                    this.props.between1Player && !this.props.startGame ? forPlayer1:''                    \n                }\n                {\n                    this.props.between2Player && !this.props.startGame ? forPlayer2:''\n\n                }\n                \n            </div>\n        );\n    }\n}\n","import React,{Component} from 'react';\n\nexport class GameMenu extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleMode = this.handleMode.bind(this);\n        this.handleQuit = this.handleQuit.bind(this);\n    }\n\nhandleMode(e) {\n    this.props.changePlayerChoose(e);\n}\nhandleQuit(e) {\n    this.props.quit(e);\n}\n    render() {\n                var menu =  (\n                    <div>\n                        <br/>\n                        <button type=\"button\" onClick = {this.handleMode} value=\"Change Mode\">Change Mode</button>\n                            <br/> <br/>\n                        <button type=\"button\" onClick = {this.handleQuit} value = 'quit'>QUIT</button>\n                    </div>\n                );\n        \n            return (\n                <div className = \"welcomeWrapper\" >\n                {this.props.playerChoose?menu:''}\n                </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Board} from './Board';\nimport {Welcome} from './Welcome';\nimport {GameMenu } from './GameMenu';\n\nconst player1 = 'X';\n// const player2 = 'O';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = ({\n      name1: '',\n      name2: '',\n      square: Array(9).fill(''),\n      winner:false,\n      playAgain:false,\n      startGame:false,\n      showMenu : false,\n      playerChoose:false,\n      between2Player:false,\n      between1Player:false,\n      currentPlayer: player1         // let's assume\n    });\n    this.submit = this.submit.bind(this);\n    this.playerChoose = this.playerChoose.bind(this);\n    this.checkWinner = this.checkWinner.bind(this);\n    this.playAgainFunc = this.playAgainFunc.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n    this.changePlayerChoose = this.changePlayerChoose.bind(this);\n    this.quit = this.quit.bind(this);\n}\n  playerChoose(e) {\n      this.setState({playerChoose:true});\n\n      if(e.target.value === '1player') {\n          this.setState({between1Player:true});\n      }\n      if(e.target.value === '2player') {\n          this.setState({between2Player:true});\n      }\n  }\n\n  submit(e) {\n    \n    let name11 = e.target.name1.value;\n    let name22 = e.target.name2.value;\n    if(name11.trim().length===0 || name22.trim().length===0) {\n     alert('Enter a Valid Name');\n    return false;\n    }\n    this.setState({\n        name1:name11,\n        name2:name22,\n        startGame:true\n      });\n}\ncheckWinner(index) { \n\n  var newSquare = this.state.square;\n\n  if(newSquare[index] === '' && !this.state.winner) {\n\n    var newPlayer = this.state.currentPlayer ==='X'?'O':'X';\n      newSquare[index] = newPlayer; \n      this.setState({ \n          square:newSquare,\n          currentPlayer:newPlayer\n      }); \n      }\n      const winLines = [\n        ['0','1','2'],\n        ['3','4','5'],\n        ['6','7','8'],\n        ['0','3','6'],\n        ['1','4','7'],\n        ['2','5','8'],\n        ['0','4','8'],\n        ['2','4','6']\n    ];\n    let len = winLines.length; \n    let i;\n    for(i = 0; i<len ; i++) {\n        const [x,y,z] = winLines[i];\n        \n        if(this.state.square[x] && this.state.square[x]===this.state.square[y] && this.state.square[x]===this.state.square[z]) {\n            this.setState({\n                winner:true\n            });\n            if(newPlayer==='X')\n            alert(this.state.name1 + ' has Won!');\n            else\n            alert(this.state.name2 + ' has Won!');\n\n            this.setState({\n                square: Array(9).fill(''),\n                playAgain:true,\n                winner:false,\n            });\n            return true;\n         }\n    }   \n        let sq = this.state.square; \n        for(i=0;i<9;i++) {\n            if(sq[i]==='')\n            break;\n        }\n        if(i===9) {\n            alert('Tie');\n            this.setState({\n                // startGame:false\n                square: Array(9).fill(''),\n                playAgain:true,\n                winner:false,\n            });\n        }\n}\nplayAgainFunc(e) {\n    this.setState({\n        playAgain:false,\n        square:Array(9).fill('')\n    });\n}\nchangeMode(e) {\n    this.setState({\n        showMenu:true,\n        square:Array(9).fill(''),\n        playAgain:false\n    })\n}\nchangePlayerChoose(e) {\n   this.setState({\n       playerChoose:false,\n       startGame:false,\n       between1Player:false,\n       between2Player:false,\n       square:Array(9).fill(''),\n       playAgain:false\n   })\n}\nquit(e) {\n    this.setState({\n        name1: '',\n        name2: '',\n        square: Array(9).fill(''),\n        winner:false,\n        playAgain:false,\n        startGame:false,\n        showMenu : false,\n        playerChoose:false,\n        between2Player:false,\n        between1Player:false,\n        currentPlayer: player1       \n      });\n}\n  render() {\n    return (\n      <div className=\"container\">\n      <h1 style = {{textAlign:\"center\",opacity:0.4,textDecoration: \"underline\"}}> TicTacToe Game</h1>\n      <Welcome \n      onSubmit = {this.submit}\n      onClick = {this.playerChoose} \n      playerChoose = {this.state.playerChoose}\n      name1={this.state.name1} \n      name2 = {this.state.name2}\n      startGame ={this.state.startGame}\n      between1Player={this.state.between1Player}\n      between2Player={this.state.between2Player}\n      />\n      <Board \n      playAgain = {this.state.playAgain}\n      playAgainFunc = {this.playAgainFunc}\n      startGame={this.state.startGame} \n      square={this.state.square} \n      checkWinner={this.checkWinner}\n      name1 = {this.state.name1}\n      name2 = {this.state.name2} \n      winner = {this.state.winner}\n      playerChoose = {this.state.playerChoose}\n      changeMode = {this.changeMode}\n      />\n       <GameMenu \n            showMenu = {this.state.showMenu} \n            playerChoose = {this.state.playerChoose}\n            changePlayerChoose = {this.changePlayerChoose}\n            quit = {this.quit}\n        />\n        <br/>\n        <div className=\"footer\">\n             <p>  <span style={{opacity:0.7}}>Developed By  </span>Jayprakash Kumar , \n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jayprakashkumar1\"> GitHub Profile , </a>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/jayprakash-kumar-82882b154/\"> LinkedIn Profile  </a>\n            </p>\n        </div>\n    </div>\n);\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}